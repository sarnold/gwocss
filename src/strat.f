C**********************************************************************
         SUBROUTINE STRAT
C**********************************************************************
C
C  READS TEMPERATURE  SOUNDING INFORMATION,CALCULATES LAPSE RATES & 
C  OTHER PARAMETERS FOR VARIOUS FLOW LEVELS. 
C   MODIFIED BY LUDWIG, JAN 2002.
C
          INCLUDE 'NGRIDS.PAR'
C
          INCLUDE 'ANCHOR.CMM'
          INCLUDE 'FLOWER.CMM'
          INCLUDE 'LIMITS.CMM'
          INCLUDE 'STALOC.CMM'
          INCLUDE 'TSONDS.CMM'
C
	REAL RHS1(NTSITE,NZGRD),SYTHYT(NTSITE),PMIDS(NSNDHT,NTSITE)
	INTEGER LOWZEE(NTSITE,NZGRD),NXTZEE(NTSITE,NZGRD)
	INTEGER LEVHI(NTSITE),LEVTOP,IXRASS(2),IYRASS(2)
C
C  INTEGER COORDINATES OF RASS SITES -- NOT USED FOR UPPER PRESSURE
C
	DATA IXRASS,IYRASS /423,432,4497,4499/
C
        IF(NUMTMP.LE.0) THEN
	   WRITE (*,*) 'NO TEMP SONDE DATA -- CANNOT RUN'
	   STOP
	END IF
C
	LEVTOP=0
C
	DO 100 JTSOND=1,NUMTMP
C
C  FILL ARRAYS WITH MSG DATA IDENTIFIER
C
	   DO 8 I=1,NSNDHT
              ZSND(I,JTSOND)=-9999.
              TSND(I,JTSOND)=-9999.
              PSND(I,JTSOND)=-9999.
	      ALTMTR(I,JTSOND)=-9999.
              ZMIDS(I,JTSOND)=-9999.
              PMIDS(I,JTSOND)=-9999.
              DPTDZS(I,JTSOND)=-9999.
              POTEMP(I,JTSOND)=-9999.
8	   CONTINUE
           II=JTSOND
C
C  READ  STATION NO., NO. OF HEIGHTS (NHITES) IN SOUNDING & DATA INPUT 
C  TYPE (ITYP) DATA ARE READ AS FOLLOWS FOR ITYP= :
C       1--HEIGHT(M--MSL),TEMPERATURE(C), POTENTIAL TEMPERATURE
C          LAPSE RATE(K/M) -- THIS OPTION NOT AVAILABLE HERE
C       2--HEIGHT(M--MSL), TEMP(C) & PRESSURE(MB)
C       3--HEIGHT(IN FT. MSL), TEMP(C), PRESSURE (MB)
C
C  SKIP BLANK LINE
C
           READ(12,*) 
           READ(12,*) XS,YS,SYTHYT(JTSOND)
	   IF ((NINT(XS) .EQ. IXRASS(1) .AND. NINT(YS).EQ.IYRASS(1))
     $          .OR. (NINT(XS).EQ.IXRASS(2)  
     $                            .AND. NINT(YS).EQ.IYRASS(2)) ) THEN
	      GOODT(JTSOND)=.FALSE.
	   ELSE
	      GOODT(JTSOND)=.TRUE.
	   END IF
	   XTMP(JTSOND)=1.0+(XS-XORIG)/DSCRS
           YTMP(JTSOND)=1.0+(YS-YORIG)/DSCRS
           READ(12,*) NTHTS(JTSOND),ITYP
C
C  SKIP COLUMN HEADERS
C
           READ(12,*) 
C
           NHITES=NTHTS(JTSOND)
	   IF (NHITES .GT.0) THEN
C
	      I=0
C
	      DO 10 J=1,NHITES
                 READ(12,*,END=186) Z,T,P
                 IF(NINT(Z) .LE.-9999 .OR. NINT(T).LE.-9999 
     $                .OR. NINT(P) .LE.-9999 .OR.   
     $                    Z-SYTHYT(JTSOND).LT. -1.0) GO TO 10    
                 I=I+1
	         IF (ITYP.GE.2) THEN
C
C  CONVERT FEET TO METERS & T TO POT TMP, IF REQUIRED (ITYP=3)
C  CONVERT TO HEIGHT ABOVE SFC-- 
C
	            IF (ITYP .EQ. 3 ) Z=0.3048*Z
	            IF (I .LE. NSNDHT) THEN
                       ZSND(I,JTSOND)=Z-SYTHYT(JTSOND)
                       POTEMP(I,JTSOND)=TPOT(P,T)
                       TSND(I,JTSOND)=T+273.13
                       PSND(I,JTSOND)=P
		       ALTMTR(I,JTSOND)=ALTSET(Z,P)
		       IF (ALTMTR(I,JTSOND).LT. 28.) WRITE(*,*)
     $                    I,' CHECK T-SONDE ',JTSOND,Z,P,ALTSET(Z,P)
	            ELSE
                       ZSND(NSNDHT,JTSOND)=Z-SYTHYT(JTSOND)
                       POTEMP(NSNDHT,JTSOND)=TPOT(P,T)
                       TSND(NSNDHT,JTSOND)=T+273.13
                       PSND(NSNDHT,JTSOND)=P
		       ALTMTR(I,JTSOND)=ALTSET(Z,P)
		       IF (ALTMTR(I,JTSOND).LT. 28.) WRITE(*,*)
     $                    I,' CHECK T-SONDE ',JTSOND,Z,P,ALTSET(Z,P)
	            END IF
	         ELSE IF (ITYP.EQ.1) THEN
C
C  REMOVED LAPSE RATE INPUT OPTION FOR SLC VTMX APPLICATION
C    FLUDWIG 2/02
C*********************************************************
		    WRITE (*,*) 'TEMP SOUNDINGS MUST PROVIDE HEIGHT ',
     $                  '(M, TYP2 OR FT, TYP3), TEMP (DEG C) & ',
     $                  'PRESS (MB/HP)'
     	            STOP
                 END IF
C
10	      CONTINUE
C
C  EMPTY SOUNDING
C	   
	   ELSE
	      WRITE (*,*) 'TEMPERATURE SONDE ', JTSOND, ' HAS NO OBS.'
	      STOP
	   END IF
186	   NHITES=I
	   NTHTS(JTSOND)=I
C
C  SOUNDING READ; FIND HEIGHTS OF FLOW SURFACES
C  FIRST, FIND NEAREST LOW REFERENCE POINT 
C
	   IDIS2=(NINT(XTMP(JTSOND))-LOWIX(1))**2+
     $                    (NINT(YTMP(JTSOND))-LOWIY(1))**2
	   JNEAR(JTSOND)=1
	   DO 17 JD=2,5
	      ID2HERE=(NINT(XTMP(JTSOND))-LOWIX(JD))**2+
     $                     (NINT(YTMP(JTSOND))-LOWIY(JD))**2
	      IF (ID2HERE .LT. IDIS2) THEN
                 IDIS2=ID2HERE
                 JNEAR(JTSOND)=JD
              END IF
17	   CONTINUE
C
	   LLLX=LOWIX(JNEAR(JTSOND))
	   LLLY=LOWIY(JNEAR(JTSOND))
C
C  CHECK TO SEE IF TOP OBSERVATION IS ABOVE THIS SURFACE.  RECORD 
C  HIGHEST LEVELS REACHED FOR INDIVIDUAL SONDES AND ALL SONDES.
C 
	   STOPLEV=ZSND(NTHTS(JTSOND),JTSOND)
	   DO 25 KL=1,NLVL
              ZLEVKL=RHS(LLLX,LLLY,KL)
	      RHS1(JTSOND,KL)=ZLEVKL
C
C  FINDING HIGHEST FLOW SURFACE REACHED BY THIS SONDE
C	      
	      IF (STOPLEV .GE. ZLEVKL) THEN
	         LEVHI(JTSOND)=KL
		 IF (KL .GT. LEVTOP) LEVTOP=KL
	      END IF
25	   CONTINUE
C	   
C  GETTING INDICES OF OBS THAT ARE NEAREST MIDPOINTS ABOVE & BELOW
C  THE FLOW SURFACES.
C
	   LOWZEE(JTSOND,1)=1
	   DO 45 KL=1,LEVHI(JTSOND)
	      ZLEVKL=RHS1(JTSOND,KL)
	      IF (KL.LT.NLVL) THEN
                 ZBAR=0.5*(ZLEVKL+RHS1(JTSOND,KL+1))
	      ELSE IF (KL.EQ.NLVL) THEN
                 ZBAR=ZLEVKL+0.5*(ZLEVKL-RHS1(JTSOND,KL-1))
	      END IF
	      CLOSE1=2000000.
	      DO 40 IZ=1,NTHTS(JTSOND)-1
		 IF (ABS(ZBAR-ZSND(IZ,JTSOND)).LT.CLOSE1) THEN
		    CLOSE1=ABS(ZSND(IZ,JTSOND)-ZBAR)
		    NXTZEE(JTSOND,KL)=IZ
		    IF (NXTZEE(JTSOND,KL).EQ.
     $                  LOWZEE(JTSOND,KL)) NXTZEE(JTSOND,KL)=IZ+1
C
C  LOWER POINT FOR NEXT SURFACE WILL BE SAME AS UPPER POINT FOR THIS 
C  ONE
C
		    IF (KL .LT. NLVL) THEN
		       LOWZEE(JTSOND,KL+1)=IZ
		    END IF
	         END IF
40	      CONTINUE
45	   CONTINUE
C
C  CHECKING TO SEE THAT FLOW SFCS ARE BETWEEN BOUNDS WHEN POSSIBLE.
C
	   DO 70 KL=2,LEVHI(JTSOND)
	      IF (ZSND(LOWZEE(JTSOND,KL),JTSOND) .GE.  
     $            RHS1(JTSOND,KL) .AND. LOWZEE(JTSOND,KL) .GT. 1) THEN
C
C  PICK 1ST PLACE YOU COME TO BELOW THE PROPER MIDPOINT
C
	         DO 60 IZ=LOWZEE(JTSOND,KL),1,-1
	            ZBAR=0.5*(RHS1(JTSOND,KL-1)+RHS1(JTSOND,KL))
	            IF (ZSND(IZ,JTSOND) .LT. ZBAR) THEN
		       LOWZEE(JTSOND,KL)=IZ
		       GO TO 70
		    END IF
60	         CONTINUE
	      END IF
70	   CONTINUE
C
C  FINALLY, CHECK TO SEE IF TOP PT IS HIGH ENOUGH (ABOVE MIDPT TO
C  NEXT SURFACE) TO EXTRAPOLATE TO ONE MORE LEVEL
C
 	   IF (LEVHI(JTSOND).LT.NLVL) THEN
 	      ZBAR=0.5*(RHS1(JTSOND,LEVHI(JTSOND))+
     $                        RHS1(JTSOND,LEVHI(JTSOND)+1))
	      IF (ZSND(NTHTS(JTSOND),JTSOND) .GE. ZBAR) THEN
	         LEVHI(JTSOND)=1+LEVHI(JTSOND)
		 IF (LEVHI(JTSOND).GT.LEVTOP) LEVTOP=LEVHI(JTSOND)
	         LOWZEE(JTSOND,LEVHI(JTSOND))=
     $                   (LOWZEE(JTSOND,LEVHI(JTSOND)-1) + 
     $                    NXTZEE(JTSOND,LEVHI(JTSOND)-1))/2 
	         NXTZEE(JTSOND,LEVHI(JTSOND))=NTHTS(JTSOND)
	      END IF
	   END IF
100	CONTINUE
C
C  ALL GOOD DATA READ; CONVERT WHERE NECESSARY & FIND HEIGHTS NEAREST 
C  THE POINTS TO USE FOR ESTIMATING GRADIENTSAT FLOW SURFACE HEIGHTS 
C  HAVE BEEN FOUND.  NOW, GET POTENTIAL TEMP LAPSE RATES TO TOP OF 
C  EACH SOUNDING AND ESTIMATE LAPSE RATES ON THE FLOW SFCS.
C
	DO 170 JTSOND=1,NUMTMP
	   DO 160 KL=LEVHI(JTSOND),1,-1
C
C  USE OBS UP TO THE HIGHEST OB. INTERPOLATE STD ATMOS HTS 
C  CORRESPONDING TO OBSERVED PRESSURES -- THEN GET PRESSURE 
C  CORRSPONDING TO THE INTERPOLATED HT.  OTHER VARIABLES ARE OBTAINED 
C  BY SIMPLE INTERP, OR FINITE DIFF ESIMATE.
C
	      IF (KL.GT.1) THEN
                 ZZ0=ZSND(LOWZEE(JTSOND,KL),JTSOND)+SYTHYT(JTSOND)
                 Z1=ZSND(NXTZEE(JTSOND,KL),JTSOND)+SYTHYT(JTSOND)
	         ZLVL=RHS1(JTSOND,KL)+SYTHYT(JTSOND)
		 AAA1=ALTMTR(NXTZEE(JTSOND,KL),JTSOND)
		 AAA0=ALTMTR(LOWZEE(JTSOND,KL),JTSOND)
	         TT0=TSND(LOWZEE(JTSOND,KL),JTSOND)
	         TT1=TSND(NXTZEE(JTSOND,KL),JTSOND)
	         PT0=POTEMP(LOWZEE(JTSOND,KL),JTSOND)
	         PT1=POTEMP(NXTZEE(JTSOND,KL),JTSOND)
	         PTLAPS(JTSOND,KL)=(PT1-PT0)/(Z1-ZZ0)
		 ALTSIG(JTSOND,KL)=XLINTR(AAA0,AAA1,ZLVL,ZZ0,Z1)
		 PSIGL(JTSOND,KL)=CVT2P(ALTSIG(JTSOND,KL),ZLVL)
	         PTSIGL(JTSOND,KL)=XLINTR(PT0,PT1,ZLVL,ZZ0,Z1)
	         TSIGL(JTSOND,KL)=
     $	                   PT2T(PSIGL(JTSOND,KL),PTSIGL(JTSOND,KL))
C
	      ELSE IF (KL.EQ.1) THEN
C
C  EXTRAPOLATE TO 10 M LEVEL
C
	         Z1=ZSND(2,JTSOND)+SYTHYT(JTSOND)
	         ZZ0=ZSND(1,JTSOND)+SYTHYT(JTSOND)
	         ZLVL=SYTHYT(JTSOND)
	         PTLAPS(JTSOND,KL)=
     $               (POTEMP(2,JTSOND)-POTEMP(1,JTSOND))/(Z1-ZZ0)
		 IF (ABS(ZLVL-ZZ0).LT.0.1) THEN
		    ALTSIG(JTSOND,KL)=ALTMTR(1,JTSOND)
	            PTSIGL(JTSOND,KL)=POTEMP(1,JTSOND)
		    TSIGL(JTSOND,KL)=TSND(1,JTSOND)
		    PSIGL(JTSOND,KL)=CVT2P(ALTSIG(JTSOND,KL),ZLVL)
		 ELSE IF (ABS(ZLVL-Z1) .LT. 0.1) THEN
		    ALTSIG(JTSOND,KL)=ALTMTR(2,JTSOND)
	            PTSIGL(JTSOND,KL)=POTEMP(2,JTSOND)
		    PSIGL(JTSOND,KL)=CVT2P(ALTSIG(JTSOND,KL),ZLVL)
		    TSIGL(JTSOND,KL)=
     $	                   PT2T(PSIGL(JTSOND,KL),PTSIGL(JTSOND,KL))
		 ELSE
                    PT1=POTEMP(2,JTSOND)  
                    PT0=POTEMP(1,JTSOND)
                    TT1=TSND(2,JTSOND)
                    TT0=TSND(1,JTSOND)
		    AAA1=ALTMTR(2,JTSOND)
		    AAA0=ALTMTR(1,JTSOND)
		    ALTSIG(JTSOND,KL)=XLINTR(AAA0,AAA1,ZLVL,ZZ0,Z1)
		    PTSIGL(JTSOND,KL)=XLINTR(PT0,PT1,ZLVL,ZZ0,Z1)
		    PSIGL(JTSOND,KL)=CVT2P(ALTSIG(JTSOND,KL),ZLVL)
	            TSIGL(JTSOND,KL)=
     $		             PT2T(PSIGL(JTSOND,KL),PTSIGL(JTSOND,KL))
		 END IF
              END IF
C
160	   CONTINUE
170	CONTINUE
C
C  NOW GET THE VALUES ABOVE THOSE OBSERVED AT EACH SITE, BUT BELOW
C  THE HIGHEST LEVEL OBSERVED ANYWHERE.
C
	DO 250 JTSOND=1,NUMTMP
	   IF (LEVHI(JTSOND)+1.LE.LEVTOP) THEN
	      DO 240 KL=LEVHI(JTSOND)+1,LEVTOP
C
C  INVERSE DISTANCE HORIZ INTERP FROM THE HIGHEST OB HERE TO 
C  HIGHEST OB ANYWHERE
C
                 XX=XTMP(JTSOND)
	         YY=YTMP(JTSOND)
		 SUMPT=0.0
	         SUMDPT=0.0
	         SUMWT=0.0
		 SUMALT=0.0
	         DO 210 JD=1,NUMTMP
C
C  SKIP WHEN LOOKING AT SAME SOUNDING BEING INTERPOLATED FOR.
C
	            IF (JD.NE.JTSOND .AND. LEVHI(JD).GE.KL) THEN
		       WEIGHT=WNDWT(XX,YY,XTMP(JD),YTMP(JD))
		       SUMWT=SUMWT+WEIGHT
		       SUMDPT=SUMDPT+WEIGHT*PTLAPS(JD,KL)
		       SUMPT=SUMT+WEIGHT*PTSIGL(JD,KL)
C
C  USE INTERPOLATED ALTIMETER SETTING TO GET ESTIMATE TO BE USED
C  FOR PRESSURE.
C
		       SUMALT=SUMALT+WEIGHT*ALTSIG(JD,KL)
		    END IF
210	         CONTINUE
C
	         IF (SUMWT.GT.0.0) THEN
	            PTLAPS(JTSOND,KL)=SUMDPT/SUMWT
		    ALTSIG(JTSOND,KL)=SUMALT/SUMWT
	            PTSIGL(JTSOND,KL)=SUMPT/SUMWT
		    PSIGL(JTSOND,KL)=CVT2P(ALTSIG(JTSOND,KL),
     $                             RHS1(JTSOND,KL)+SYTHYT(JTSOND))
		    TSIGL(JTSOND,KL)=PT2T(PSIGL(JTSOND,KL),
     $                                        PTSIGL(JTSOND,KL))
C
C  CHECK FOR SUPERADIABATIC LAPSE RATE
C
	            IF (PTSIGL(JTSOND,KL).LT.PTSIGL(JTSOND,KL-1)) THEN
		       PTSIGL(JTSOND,KL)=PTSIGL(JTSOND,KL-1)
		       TSIGL(JTSOND,KL)=
     $                      PT2T(PSIGL(JTSOND,KL),PTSIGL(JTSOND,KL))
		    END IF
C     	            
	         ELSE
		    WRITE (*,*) 'CHECK STRAT NEAR 210'
		    STOP
	         END IF
240	      CONTINUE
	   END IF
C
250	CONTINUE
C
C  FOR LEVELS ABOVE THE HIGHEST OB, USE LAST VALUE OF LAPSE 
C  BASED ON OBS AND EXTRPOLATE TEMPERATURE.
C
	IF (LEVTOP.LT.NLVL) THEN
	   DO 275 JTSOND=1,NUMTMP
C
C  IF NO SONDE REACHES LOWEST LEVEL, USE A MODERATELY STABLE LAPSE
C  RATE OF 0.005 DEGK/M AND SFC ALTIMETER SETTING
C
     	      IF (LEVTOP.LT.2) THEN
	         PTLAPS(JTSOND,1)=0.005
		 LEVTOP=1
	      ELSE
	         PADJUST=ALTSIG(JTSOND,LEVTOP)
	      END IF
C
	      DO 265 KL=LEVTOP+1,NLVL
		 ALTSIG(JTSOND,KL)=ALTSIG(JTSOND,LEVTOP)
	         PSIGL(JTSOND,KL)=CVT2P(ALTSIG(JTSOND,LEVTOP),
     $                           RHS1(JTSOND,KL)+SYTHYT(JTSOND))
	         PTLAPS(JTSOND,KL)=PTLAPS(JTSOND,LEVTOP)
C
C  CHECK FOR SUPERADIABATIC LAPSE RATE
C
		 IF (PTLAPS(JTSOND,KL).LT.0.0) PTLAPS(JTSOND,KL)=0.0
C
C  ESTIMATE PRESSURE AT LAST LEVEL FROM STAND ATMOS HEIGHT
C  USE IT TO ESTIMATE PTENTIAL TEMP AT THIS LEVEL BY EXTRAPOL
C  FROM PREVIOUS LEVEL.
C
		 PTSIGL(JTSOND,KL)=PTSIGL(JTSOND,LEVTOP) + 		 
     $              ((RHS1(JTSOND,KL)-RHS1(JTSOND,LEVTOP))*
     $                    PTLAPS(JTSOND,LEVTOP))
C
C NOW CONVERT POTENT TEMP BACK TO TEMP
C
     	         TSIGL(JTSOND,KL)=
     $                 PT2T(PSIGL(JTSOND,KL),PTSIGL(JTSOND,KL))
265	      CONTINUE
275	   CONTINUE
	END IF
C
        RETURN
C
        END

