C*********************************************************************
	SUBROUTINE RINVMOD(TRPVAL,X0,Y0,XX,YY,NOBS,VARBL)
C*********************************************************************
C 
C
C  MODIFIED INVERSE DISTANCE INTERPOLATION;  USES ONLY NEARBY
C  OBSERVATIONS.  THE WEIGHTING FUNCTION IS WNDWT (X0,Y0,X1,Y1).
C  INTERPOLATES TO THE POINT X0,Y0 FROM VALUES OF THE VARIABLE (VARBL)
C  AT POINTS XX, YY.  IF A SINGLE OBSERVED VALUE IS WITHIN THE MINIMUM
C  DISTANCE SPECIFIED IN WNDWT, IT IS USED.  ASSUMES THAT GRID UNITS 
C  ARE USED.
C
C		FLUDWIG, 5/2002
C
        INCLUDE 'NGRIDS.PAR'
C
        INCLUDE 'LIMITS.CMM'
C
	PARAMETER (NPTS=26)
C
	REAL VARBL(NSITES),XX(NSITES),YY(NSITES)
C
	D2MIN=0.1
C
C  IF ONLY ONE OBS, USE THAT VALUE EVERYWHERE.
C
	IF (NOBS.EQ.1) THEN
	   TRPVAL=VARBL(1)
	   RETURN
	ELSE IF (NOBS.EQ.0) THEN
	  WRITE (*,*) 'SOMETHING WRONG -- NOBS= ',NOBS
	  STOP
	END IF
C
C  CHECK FOR TOO MANY INPUT VALUES
C
	IF (NOBS.GT.NSITES) THEN
	   WRITE (*,*) 'TOO MANY OBS IN RM2MOD; USING 1ST ',NSITES
	   NTRY=NSITES
	ELSE
	   NTRY=NOBS
	END IF
C
C  DEFINE EVER INCREASING RADIUS UNTIL ENOUGH OBS AVAILABLE FOR
C  INTERPOLATION.  MAXIMUM SET TO BE TWICW THE MAXIMUM RADIUS OF THE 
C  DOMAIN (RMAX).  SEARCHED AREA INCREASES BY RSTEP UNTIL AT LEAST 2
C  OBSERVATIONS FOUND.  RSTEP IS 1/20 MAX NUMBER OF GRID UNITS.
C  FIRST STEP IS A RADIUS OF SQRT(2) GRID UNITS. IF ANY VALUE FOUND 
C  THIS  CLOSE, IT IS USED.
C
	RMAX=SQRT(FLOAT(NXGRD**2+NYGRD**2))
	RSTEP=RMAX/20.0
C
C  3 CHOICES EXAMINED FOR RMIN:
C       1.  RADIUS (0.5) OF CIRCLE TANGENT TO THE 4 SIDES OF A 
C           GRID SQUARE
C       2.  RADIUS (0.707) OF CIRCLE THROUGH THE 4 CORNERS OF A 
C           GRID SQUARE
C	3.  RADIUS (.604) MIDWAY BETWEEN 0.5 & SQRT(1/2)
C       4.  IN SQUARE OF 0.5 UNIT SIDE WITH CORNER AT GRID SQUARE
C
C  APPROACH 3 SEEMS TO GET MOST OF OBSERVATIONS, WHILE AVERAGING 
C  MORE THAN ONE OB ON FEWER OCCASIONS.
C
	RMIN=0.604
C
	SUM=0.0
	SUMWT=0.0
	NCASE=0
	R2PAST=0.0
	DO 200 NR=0,20
	   RAD=RMIN+FLOAT(NR)*RSTEP
	   R2TEST=RAD**2
	   DO 150 IOB=1,NTRY
	      IF (NINT(VARBL(IOB)).NE.-9999) THEN
	         R2=(X0-XX(IOB))**2+(Y0-YY(IOB))**2
C
C  IF OBSERVATION IS WITHIN A GRID SQUARE AROUND THIS POINT, USE IT.
C  OTHERWISE, GET VALUES FOR INVERSE DISTANCE INTRPOLATION.
C
 	         IF (NR.EQ.0 .AND. R2.LE.R2TEST) THEN
C
		    WT=WNDWT(X0,Y0,XX(IOB),YY(IOB))
		    SUM=SUM+WT*VARBL(IOB)
		    SUMWT=SUMWT+WT
	         ELSE IF (R2.LE.R2TEST .AND. R2.GT.R2PAST) THEN
C
		    WT=WNDWT(X0,Y0,XX(IOB),YY(IOB))
		    SUM=SUM+WT*VARBL(IOB)
		    SUMWT=SUMWT+WT
		    NCASE=NCASE+1
		 END IF
	      END IF
150	   CONTINUE
C
C  TE FOLLOWING USES NEARBY OBS WITH LITTLE OR NO INTERPOLATION.
C
	   IF (NR.EQ.0 .AND. SUMWT .GT. 0.0) THEN
	      TRPVAL=SUM/SUMWT
	      RETURN
C
C  WHEN WE HAVE ACCUMULATED AT LEAST 15 PTS, STOP ADDING POINTS 
C  AND INTERPOLATE 
C
	   ELSE IF (NCASE .GE. 15) THEN
C
	      TRPVAL=SUM/SUMWT
	      RETURN
	   END IF
	   R2PAST=R2TEST
200	CONTINUE
C
C  WE NEVER GOT 15 PTS, SO WE USE THE INVERSE DISTANCE WEIGHTED 
C  ESTIMATE WITH WHAT WE HAVE.
C
	IF (SUMWT.GT.0.0) THEN
	   TRPVAL=SUM/SUMWT
	   RETURN
	ELSE
	   WRITE (*,*) 'SOMETHING WRONG -- NCASE= ', NCASE
	   STOP
	END IF
C
	END
C
C*********************************************************************
	SUBROUTINE RINVMOLD(TRPVAL,X0,Y0,XX,YY,NOBS,VARBL)
C*********************************************************************
C                  
C  INVERSE DISTANCE INTERPOLATION;  USES ALL AVAILABLE
C  OBSERVATIONS.  THE WEIGHTING FUNCTION IS WNDWT (X0,Y0,X1,Y1).
C  INTERPOLATES TO THE POINT X0,Y0 FROM VALUES OF THE VARIABLE (VARBL)
C  AT POINTS XX, YY.  IF A SINGLE OBSERVED VALUE IS WITHIN THE MINIMUM
C  DISTANCE SPECIFIED IN WNDWT, THE FIELD AROUND THAT PT IS ADJUSTED 
C  ELSEWHERE TO MATCH THE VALUE AT THE PT.
C
C		FLUDWIG, 7/2002
C
        INCLUDE 'NGRIDS.PAR'
C
        INCLUDE 'LIMITS.CMM'
C
	PARAMETER (NPTS=NSITES)
C
	REAL VARBL(NSITES),XX(NSITES),YY(NSITES)
C
C  IF ONLY ONE OBS, USE THAT VALUE EVERYWHERE.
C
	IF (NOBS.GT.1 .AND. NOBS.LE. NSITES) THEN
	   SUM=0.0
	   SUMWT=0.0
	   NCASE=0
	   DO 200 IOB=1,NOBS
	      WT=WNDWT(X0,Y0,XX(IOB),YY(IOB))
	      SUM=SUM+WT*VARBL(IOB)
	      SUMWT=SUMWT+WT
200	   CONTINUE
 	   TRPVAL=SUM/SUMWT
	   RETURN
	ELSE IF (NOBS.EQ.1) THEN
	   TRPVAL=VARBL(1)
	   RETURN
	ELSE IF (NOBS.GT.NSITES) THEN
	   WRITE (*,*) 'TOO MANY OBS IN RM2MOLD '
	   STOP
	ELSE IF (NOBS.EQ.0) THEN
	  WRITE (*,*) 'SOMETHING WRONG IN RM2MOLD -- NOBS= ',NOBS
	  STOP
	END IF
C
	END

