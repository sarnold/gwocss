C**********************************************************************
          SUBROUTINE BAL5(NITER)
C**********************************************************************
C
C  THIS IS A MODIFIED VERSION OF ROY ENDLICH'S OCTOBER 1984 CODE. THE
C  OPTIONS FOR VORTICITY CONSERVATION & NONZERO DIVERGENCE HAVE BEEN
C  REMOVED. THE CODE WAS ALSO MODIFIED TO USE MORE
C  IF-THEN-ELSE STRUCTURE BY LUDWIG DECEMBER 1987.
C
C  THIS ROUTINE BALANCES DIVERGENCE TOWARD ZERO. DIV IS SCALED TO UNITS
C  OF 10**-6/SECOND. THE METHOD USES DIRECT VECTOR ALTERATIONS.
C  THIS FORM IS FOR A SQUARE GRID AND OMITS TRIGONOMETRIC FUNCTIONS.
C  THE FLUX FORMULATION IS USED SO THAT WIND COMPONENTS ARE WEIGHTED BY
C  THE THICKNESS OF THE LAYER WHEN THE FINITE DIFFERENCE SCHEME IS USED
C  TO REDUCE THE DIVERGENCE. INDICES IN ARRAYS (I,J,K) ARE I=COLUMN,
C  J=ROW, K=LEVEL; PT (1,1,1) IS AT SW CORNER AT GROUND. FOR 
C  COMPUTATION BOXES, INDICES REFER TO SW CORNER OF BOX.
C______________________________________________________________________
C
C  MODIFIED MARCH 1996 SO THAT BELOW GROUND AND NEAR-STATION POINTS ARE 
C  TREATED SEPARATELY.  ADJUSTMENTS AT GRID POINTS NEAR OBSERVATION 
C  SITES ARE ADJUSTED BY LESS (THE FACTOR ADJMAX) THAN OTHER POINTS.  
C  BELOW GROUND ARE LEFT UNADJUSTED AS BEFORE.
C
C	F. L. LUDWIG 3/96
C______________________________________________________________________
C
C  MODIFIFED SO THE ADJUSTMENTS OVER OVERRIDDEN AT THE END OF EACH 
C  ITERATION ALL POINTS ARE ADJUSTED, THEN THOSE NEAR OBSERVATIONS OR 
C  SURROUNDED BY 3 OR 4 SUBSURFACE POINT ARE SET BACK TO ORIGINAL, OR 
C  NEAR-ORIGINAL VALUES BEFORE STARTING NEXT ITERATION.  ADDED SECTION 
C  TO GET VERTICAL MOTION ESTIMATES FROM SLOPE OF FLOW SURFACE AND 
C  HORIZONTAL COMPONENTS (FUNCTION DUBYOU)
C
C	FLUDWIG 3/2000
C_____________________________________________________________________
C
	INCLUDE 'NGRIDS.PAR'
C
        INCLUDE 'FLOWER.CMM'
        INCLUDE 'LIMITS.CMM'
        INCLUDE 'STALOC.CMM'
C
       	LOGICAL DOADJ,IFXPT(NXGRD,NYGRD),ISDOP
        REAL DI(NXGRD,NYGRD),U1(NXGRD,NYGRD),V1(NXGRD,NYGRD)
	REAL UN(NXGRD,NYGRD),VN(NXGRD,NYGRD),THK(NXGRD,NYGRD)
	REAL USTART(NXGRD,NYGRD),VSTART(NXGRD,NYGRD)
        DATA DOADJ, ENFRAC /.FALSE.,0.5/
C
        GS=DS*1.0E-05
C
C  USE GRID SPACING IN 100'S OF KM.  DS IS IN M. FOR PROPER SCALING.
C
        GSI=10.0/GS
C
        DO 800 L=2,NLVL
C
C  GET COMPONENTS FOR THIS LEVEL
C
	  DO 35 J=1,NROW
             DO 33 I=1,NCOL
               UN(I,J)=U(I,J,L)
               VN(I,J)=V(I,J,L)
33	     CONTINUE
35         CONTINUE
C
C  IDENTIFY PTS NOT TO BE CHANGED
C
           CALL FIXWND (IFXPT,L)
C
           CALL SETMAT(0.0,DI,NCOL,NROW)
C
C COMPUTE LAYER THICKNESS AND MULTIPLY WIND COMPONENTS
C
           DO 40 J=1,NROW
             DO 40 I=1,NCOL
                LA=L +1
                IF (LA.GT.NLVL) LA=NLVL
                HTA=RHS(I,J,LA)
                LB=L-1
                IF (LB.LT.1) LB=1
                HTB=RHS(I,J,LB)
                IF (HTB.LT.-1.0) HTB=-1.0
                THK(I,J)=0.5*(HTA-HTB)*0.01
C
C  FOR NEG (OR VERY SMALL) RHS.
C
                IF (THK(I,J).LE.0.01) THK(I,J)=0.01
C                IF (THK(I,J).LE.0.1) THK(I,J)=0.1
C
C  UNITS OF THICKNESS ARE HUNDREDS OF M FOR CONVENIENCE. 
C  SET INITIAL WINDS BEFORE ALTERATIONS.
C
                U1(I,J)=UN(I,J)
                V1(I,J)=VN(I,J)
C
C  WEIGHT WINDS WITH THICKNESS OF LAYER.
C
                UN(I,J)=U1(I,J)*THK(I,J)
                VN(I,J)=V1(I,J)*THK(I,J)
 40         CONTINUE
C
C  COMPUTE DIVERGENCE (DI=DUE+DVN) FROM FLUX DIFFERENCES BETWEEN
C  V COMPONENTS AT NORTH (VNO) & SOUTH (VSO) SIDES OF BOX & U
C  COMPONENTS AT EAST (UE) & WEST (UW) SIDES OF BOX. DDIJ IS ZERO
C  TO PRODUCE NONDIVERGENT WINDS; OTHER VALUES COULD BE USED TO
C  ACCOMODATE AN AREA-WIDE GENERAL DIVERGENCE. RA=RELAXATION FACTOR.
C
	     DDIJ=0.0
             RA=0.7
             DO 240 LG=1,NITER
C
C  SAVE VALUES AT START OF ITERATION SO THE VALUES AT 
C  NEAR-OSERVATION AND OTHER FIXED POINTS CAN BE CHANGED BACK AT 
C  END OF ECH ITERATIVE STEP -- ADDED 3/2000 BY FLUDWIG
C
	       DO 70 J=1,NROW
		 DO 60 I=1,NCOL
		   USTART(I,J)=UN(I,J)
		   VSTART(I,J)=VN(I,J)
60		CONTINUE
70	      CONTINUE
C
              DO 150 J=1,NROWM1
                DO 140 I=1,NCOLM1
                   UE=0.5*(UN(I+1,J)+UN(I+1,J+1))
                   UW=0.5*(UN(I,J)  +UN(I,J+1))
                   VSO=0.5*(VN(I+1,J)+VN(I,J))
                   VNO=0.5*(VN(I,J+1)+VN(I+1,J+1))
                   DUE=GSI*(UE-UW)
                   DVN=GSI*(VNO-VSO)
                   DI(I,J)=DUE+DVN
                   CUIJ=0.05*GS*(DDIJ-DI(I,J))*RA
                   CVIJ=0.05*GS*(DDIJ-DI(I,J))*RA
C
C  LIMIT CHANGES TO LESS THAN 1 FOR NUMERICAL STABILITY.
C
                   IF (CUIJ .LT.-1.0) CUIJ=-1.0
                   IF (CUIJ .GT. 1.0) CUIJ=1.0
                   IF (CVIJ .LT.-1.0) CVIJ=-1.0
                   IF (CVIJ .GT. 1.0) CVIJ=1.0
C
                   UN(I+1,J)=UN(I+1,J)+CUIJ
                   UN(I+1,J+1)=UN(I+1,J+1) +CUIJ
                   UN(I,J)=UN(I,J) -CUIJ
                   UN(I,J+1)=UN(I,J+1) -CUIJ
                   VN(I+1,J)=VN(I+1,J)-CVIJ
                   VN(I,J)=VN(I,J)-CVIJ
                   VN(I,J+1)=VN(I,J+1)+CVIJ
                   VN(I+1,J+1)=VN(I+1,J+1)+CVIJ
140		 CONTINUE
C
150           CONTINUE
C
C  GO BACK AND SUBSTITUTE ORIGINAL VALUES, CORRECTED FOR MAXIMUM
C  SPECIFIED ADJUSTMENT AT FIXED POINTS.  INSERT ZEROS FOR SUBSURFACE 
C  POINTS.  INCREASE ADJUSTMENTS FOR HIGHER LEVELS.
C
C     ADDED BY FLUDWIG 3/2000
C
	     DO 170 J=1,NROW
	       DO 160 I=1,NCOL
C
		 IF (IFXPT(I,J)) THEN
C
C  FOR UPPER WIND SITE USE MINIMUM ADJUSTMENT AT ALL LEVELS
C
		     ISDOP=.FALSE.
		     DO 153 JD=1,NUMDOP
			IF (I.EQ. NINT(XDOP(JD)) .AND. 
     $                        J.EQ. NINT(YDOP(JD))) ISDOP=.TRUE.
153		     CONTINUE
C
		    IF (L.EQ.LEVBOT(I,J) .OR. ISDOP) THEN
	               UN(I,J)=USTART(I,J)+
     $                             ADJMAX*(UN(I,J)-USTART(I,J))
	               VN(I,J)=VSTART(I,J)+
     $                             ADJMAX*(VN(I,J)-VSTART(I,J))
C
		    ELSE IF (L.GT.LEVBOT(I,J)) THEN
C
C  INCREASE ADJUSTMENT ALLOWED WITH HEIGHT AT OTHER FIXED POINTS
C
		       ADJLESS=ADJMAX+(1.0-ADJMAX)*
     $                     (RHS(I,J,L)-RHS(I,J,LEVBOT(I,J)))/
     $                     (RHS(I,J,NLVL)-RHS(I,J,LEVBOT(I,J)))
C
                       UN(I,J)=USTART(I,J)+
     $                          ADJLESS*(UN(I,J)-USTART(I,J))
                       VN(I,J)=VSTART(I,J)+
     $                          ADJLESS*(VN(I,J)-VSTART(I,J))
		    END IF
		  END IF
160	        CONTINUE
170	     CONTINUE
C
C  END OF ITERATION LOOP
C
240	  CONTINUE
C
          SUM1=0.0
          SUM2=0.0
          Q1=0.0
          DO 350 J=1,NROW
             DO 340 I=1,NCOL
C
C  INCLUDE ONLY POINTS THAT ARE ABOVE THE SURFACE AND 
C  ARE NOT NEAREST TO AN OBSERVATION SITE.
C
                IF (RHS(I,J,L).GT.0.0 ) THEN
                    UN(I,J)=UN(I,J)/THK(I,J)
                    VN(I,J)=VN(I,J)/THK(I,J)
                    U1(I,J)=U1(I,J)-UN(I,J)
                    V1(I,J)=V1(I,J)-VN(I,J)
                    Q1=Q1+1.0
                    SUM1=SUM1+U1(I,J)
                    SUM2=SUM2+V1(I,J)
                END IF
340	     CONTINUE
350	  CONTINUE
C
	  SUM1=SUM1/Q1
	  SUM2=SUM2/Q1
C
C  NORMALIZE ORIGINAL AVERAGE VALUES FOR ABOVE GROUND POINTS
C  THAT ARE NOT NEAREST OBSERVATION SITES.
C
	  DO 450 J=1,NROW
            DO 445 I=1,NCOL
                 IF (RHS(I,J,L) .GT.0.0) THEN
                    UN(I,J)=UN(I,J)+SUM1
                    VN(I,J)=VN(I,J)+SUM2
                 ELSE
                    UN(I,J)=0.0
                    VN(I,J)=0.0
                 END IF
445	    CONTINUE
450	  CONTINUE
C
C  CHANGE BACK TO 3D ARRAYS 
C
          DO 590 J=1,NROW
            DO 580 I=1,NCOL
                 U(I,J,L)=UN(I,J)
                 V(I,J,L)=VN(I,J)
                 W(I,J,L)=DUBYOU(UN(I,J),VN(I,J),I,J,L)
580         CONTINUE
590	  CONTINUE
C
C  END FLOW LEVEL LOOP
C
800     CONTINUE
C
        RETURN
C
        END

